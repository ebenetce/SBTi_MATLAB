classdef TemperatureScoreConfig < SBTi.configs.PortfolioAggregationConfig
    
    % This factor determines what part of the temperature for a not SBTi-validated company should be the TS and what part
    % should be the default score.
    
    properties
        SBTi_FACTOR = 1
        FALLBACK_SCORE (1,1) double = 3.2
        TEMPERATURE_FLOOR = 0.0
        FILE_SR15_MAPPING = fullfile( extractBefore(mfilename('fullpath'), 'TemperatureScoreConfig'), "inputs", "sr15_mapping.xlsx")
        FILE_REGRESSION_MODEL_SUMMARY = fullfile( extractBefore(mfilename('fullpath'), 'TemperatureScoreConfig'), "inputs", "regression_model_summary.xlsx")
        
        DEFAULT_INDUSTRY = "Others"
        
        VALUE_TARGET_REFERENCE_ABSOLUTE = "absolute"
        VALUE_TARGET_REFERENCE_INTENSITY = "intensity"
        VALUE_TARGET_REFERENCE_INTENSITY_BASE = "int"
        
        SLOPE_MAP = struct( ...
            SBTi.ETimeFrames.SHORT, "slope5", ...
            SBTi.ETimeFrames.MID, "slope15", ...
            SBTi.ETimeFrames.LONG, "slope30");
        
        INTENSITY_MAPPINGS = struct(...
            "Revenue", dictionary([SBTi.EScope.S1S2, SBTi.EScope.S3], ["INT.emKyoto_gdp", "INT.emKyoto_gdp"]) , ...
            "Product", dictionary([SBTi.EScope.S1S2, SBTi.EScope.S3], ["INT.emKyoto_gdp", "INT.emKyoto_gdp"]) , ...
            "Cement",  dictionary([SBTi.EScope.S1S2, SBTi.EScope.S3], ["INT.emKyoto_gdp", "INT.emKyoto_gdp"]) , ...
            "Oil",     dictionary([SBTi.EScope.S1S2, SBTi.EScope.S3], ["INT.emCO2EI_PE", "INT.emCO2EI_PE"]), ...
            "Steel",   dictionary([SBTi.EScope.S1S2, SBTi.EScope.S3], ["INT.emKyoto_gdp", "INT.emKyoto_gdp"]), ...
            "Aluminum",dictionary([SBTi.EScope.S1S2, SBTi.EScope.S3], ["INT.emKyoto_gdp", "INT.emKyoto_gdp"]) ,...
            "Power",   dictionary([SBTi.EScope.S1S2, SBTi.EScope.S3], ["INT.emCO2EI_elecGen", "INT.emCO2EI_elecGen"]) ...
        );
        
        ABSOLUTE_MAPPINGS = struct( ...
            "B06", dictionary([SBTi.EScope.S1S2, SBTi.EScope.S3], ["Emissions|Kyoto Gases", "Emissions|Kyoto Gases"]), ...
            "C23", dictionary([SBTi.EScope.S1S2, SBTi.EScope.S3], ["Emissions|CO2|Energy and Industrial Processes", "Emissions|Kyoto Gases"]), ...
            "C24", dictionary([SBTi.EScope.S1S2, SBTi.EScope.S3], ["Emissions|CO2|Energy and Industrial Processes", "Emissions|Kyoto Gases"]), ...
            "D35", dictionary([SBTi.EScope.S1S2, SBTi.EScope.S3], ["Emissions|CO2|Energy and Industrial Processes", "Emissions|Kyoto Gases"]), ...
            "H49", dictionary([SBTi.EScope.S1S2, SBTi.EScope.S3], ["Emissions|Kyoto Gases", "Emissions|Kyoto Gases"]), ...
            "H50", dictionary([SBTi.EScope.S1S2, SBTi.EScope.S3], ["Emissions|Kyoto Gases", "Emissions|Kyoto Gases"]), ...
            "H51", dictionary([SBTi.EScope.S1S2, SBTi.EScope.S3], ["Emissions|Kyoto Gases", "Emissions|Kyoto Gases"]), ...
            "H52", dictionary([SBTi.EScope.S1S2, SBTi.EScope.S3], ["Emissions|Kyoto Gases", "Emissions|Kyoto Gases"]), ...
            "H53", dictionary([SBTi.EScope.S1S2, SBTi.EScope.S3], ["Emissions|Kyoto Gases", "Emissions|Kyoto Gases"]), ...
            "other", dictionary([SBTi.EScope.S1S2, SBTi.EScope.S3], ["Emissions|Kyoto Gases", "Emissions|Kyoto Gases"]) ...
            );
        
        TEMPERATURE_RESULTS = 'temperature_results'
        INVESTMENT_VALUE = "investment_value"
    end
end